name: Compilar o Firmware da JCFLIGHT
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:

    - name: Run Slug
      uses: rlespinasse/github-slug-action@v3.x

    - name: Run Checkout
      uses: actions/checkout@v2

    - name: Run Python
      uses: actions/setup-python@v1

    - name: Run Pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.target }}

    - name: Instalar o PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
    - name: Obter cache do PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-platformio

    - name: Rodar testes do PlatformIO
      run: |
        platformio platform install native
        platformio platform update
        cd src
  targets:
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.set-targets.outputs.targets }}
    steps:
    - name: Run Checkout
      uses: actions/checkout@v2
    - id: set-targets
      run: echo "::set-output name=targets::[$(grep -r "\[env:" src/targets | sed 's/.*://' | sed s/.$// | egrep "(STLINK|UART)" | grep -v DEPRECATED | tr '\n' ','  | sed 's/,$/"\n/' | sed 's/,/","/'g | sed 's/^/"/')]"

  build:
    needs: targets
    strategy:
      fail-fast: false
      matrix:
        target: ${{fromJSON(needs.targets.outputs.targets)}}
    runs-on: ubuntu-latest
    steps:

    - name: Run Slug
      uses: rlespinasse/github-slug-action@v3.x

    - name: Run Checkout
      uses: actions/checkout@v2

    - name: Run Python
      uses: actions/setup-python@v1

    - name: Run Pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.target }}

    - name: Instalar o PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
    - name: Obter o cache do PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-platformio

    - name: Rodar os testes do PlatformIO
      run: |
        platformio platform update
        platformio platform install native
        mkdir -p ~/artifacts
        cd src
    - name: Guardar Artefatos
      uses: actions/upload-artifact@v2-preview
      with:
        name: JCFLIGHT-${{ env.GITHUB_REF_SLUG_URL }}-${{ github.run_number }}
        path: ~/artifacts/**/*.bin
      continue-on-error: true